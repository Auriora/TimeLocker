@startuml
' PlantUML style configuration
!theme _none_
skin plantuml
hide empty members

' Entity definitions
entity User {
  * id : string <<PK>>
  --
  username : string
  email : string
  password_hash : string
  created_at : datetime
  last_login : datetime
}

entity Repository {
  * id : string <<PK>>
  --
  name : string
  location : string
  type : string
  password_hash : string
  credentials : json
  created_at : datetime
  last_accessed : datetime
  initialized : boolean
  owner_id : string <<FK>>
}

entity Snapshot {
  * id : string <<PK>>
  --
  repository_id : string <<FK>>
  short_id : string
  timestamp : datetime
  tags : string[]
  paths : string[]
  total_size : bigint
  file_count : int
  metadata : json
}

entity BackupJob {
  * id : string <<PK>>
  --
  repository_id : string <<FK>>
  name : string
  tags : string[]
  scheduled_time : datetime
  status : string
  start_time : datetime
  end_time : datetime
  bytes_processed : bigint
  files_processed : int
  error_message : string
}

entity BackupTarget {
  * id : string <<PK>>
  --
  backup_job_id : string <<FK>>
  name : string
  tags : string[]
  file_selection_id : string <<FK>>
}

entity FileSelection {
  * id : string <<PK>>
  --
  name : string
  base_paths : string[]
  case_sensitive : boolean
}

entity Pattern {
  * id : string <<PK>>
  --
  pattern : string
  type : string
  file_selection_id : string <<FK>>
  pattern_group_id : string <<FK>>
}

entity PatternGroup {
  * id : string <<PK>>
  --
  name : string
  description : string
}

entity File {
  * id : string <<PK>>
  --
  snapshot_id : string <<FK>>
  path : string
  hash : string
  size : bigint
  modified_time : datetime
  permissions : string
  owner : string
}

entity RetentionPolicy {
  * id : string <<PK>>
  --
  repository_id : string <<FK>>
  name : string
  hourly : int
  daily : int
  weekly : int
  monthly : int
  yearly : int
  last : int
}

entity BackupLog {
  * id : string <<PK>>
  --
  backup_job_id : string <<FK>>
  timestamp : datetime
  level : string
  message : string
  details : json
}

entity RepositoryCheck {
  * id : string <<PK>>
  --
  repository_id : string <<FK>>
  timestamp : datetime
  success : boolean
  error_message : string
  details : json
}

' Relationships
User ||--o{ Repository : manages
Repository ||--o{ Snapshot : contains
Repository ||--o{ BackupJob : executes
Repository ||--o{ RetentionPolicy : applies
BackupJob ||--o{ BackupTarget : includes
BackupTarget ||--o{ FileSelection : uses
FileSelection ||--o{ Pattern : contains
FileSelection ||--o{ PatternGroup : references
PatternGroup ||--o{ Pattern : contains
Snapshot ||--o{ File : contains
BackupJob ||--o{ BackupLog : generates
Repository ||--o{ RepositoryCheck : validates

@enduml