[pytest]
# Pytest configuration for TimeLocker MVP

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output options
addopts =
  --verbose
  --tb=short
  --strict-markers
  --strict-config
  --disable-warnings
  --color=yes
  --durations=10
  --maxfail=5
  --timeout=300
  --timeout-method=thread

# Markers for test categorization
markers =
  unit: Unit tests for individual components
  integration: Integration tests for component interactions
  security: Security-focused tests
  performance: Performance and benchmark tests
  critical: Critical path tests that must pass
  slow: Tests that take a long time to run
  network: Tests that require network access
  filesystem: Tests that interact with the filesystem
  backup: Tests related to backup operations
  restore: Tests related to restore operations
  config: Tests related to configuration management
  monitoring: Tests related to monitoring and notifications
  e2e: End-to-end validation tests
  platform: Cross-platform compatibility tests
  regression: Regression tests for previously fixed issues
  stress: Stress tests for high-load scenarios (run separately with longer timeouts)

# Test filtering
filterwarnings =
  ignore::DeprecationWarning
  ignore::PendingDeprecationWarning
  ignore::UserWarning:botocore.*
  ignore::UserWarning:urllib3.*

# Minimum version requirements
minversion = 6.0


# Log configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# File logging
log_file = tests.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S


# Doctest options
doctest_optionflags = NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL

# Cache
cache_dir = .pytest_cache
