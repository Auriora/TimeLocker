<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE terms SYSTEM "https://resources.jetbrains.com/writerside/1.0/glossary.dtd">
<terms>
    <term name="SRS">Software Requirements Specification - a document that describes the requirements for a software system.</term>
    <term name="UX">User Experience - the overall experience of a person using a product, especially in terms of how easy or pleasing it is to use.</term>
    <term name="UI">User Interface - the means by which users interact with a software application.</term>
    <term name="UAT">User Acceptance Testing - the process of verifying that a solution works for the user.</term>
    <term name="CI/CD">Continuous Integration/Continuous Deployment - practices that enable frequent, reliable software releases through automation.</term>
    <term name="LLM">Large Language Model - an AI system trained on vast amounts of text data that can generate human-like text and assist in various tasks.</term>
    <term name="Junie">The AI assistant used in this project to help with development tasks.</term>
    <term name="Checkpoint">A point in the process where review and approval are required before proceeding to the next phase.</term>
    <term name="Deliverable">A tangible output produced during a phase of the SDLC that can be reviewed and validated.</term>
    <term name="Traceability">The ability to track requirements through design, implementation, and testing phases of the SDLC.</term>
    <term name="SDLC">Software Development Life Cycle - the process used to design, develop, and test high-quality software.</term>
    <term name="Requirements Gathering">The process of collecting and documenting the needs and constraints for a software system.</term>
    <term name="Requirements Analysis">The process of analyzing and refining requirements to ensure they are clear, complete, and consistent.</term>
    <term name="Design Phase">The stage in the SDLC where the software's architecture and components are defined.</term>
    <term name="Implementation">The phase where the actual code is written according to the design specifications.</term>
    <term name="Testing">The process of evaluating a system to identify any gaps, errors, or missing requirements.</term>
    <term name="Deployment">The process of releasing the software to the production environment.</term>
    <term name="Maintenance">The process of modifying and updating software after deployment to correct faults and improve performance.</term>
    <term name="Continuous Improvement">An ongoing effort to improve products, services, or processes over time.</term>
    <term name="Structured Prompting">A technique for interacting with LLMs using carefully crafted input formats to guide the model's responses.</term>
    <term name="Multi-stage Review">A review process that involves multiple iterations and levels of scrutiny to ensure quality.</term>
    <term name="Validation">The process of checking whether a product satisfies specified requirements.</term>
    <term name="Verification">The process of evaluating whether a product complies with regulations, specifications, or conditions.</term>
    <term name="Iterative Refinement">A process of repeatedly improving a design or implementation based on feedback.</term>
    <term name="Design Rationale">Documentation that explains the reasoning behind design decisions.</term>
    <term name="Edge Cases">Unusual or extreme situations that might cause problems in a system if not properly handled.</term>
    <term name="Human-in-the-loop">A model that requires human interaction for decision-making or validation.</term>
    <term name="Requirements Traceability">The ability to follow the life of a requirement from its origin through implementation and testing.</term>
    <term name="Stakeholder">Any person or organization that has an interest in or is affected by the software system.</term>
    <term name="Use Case">A description of how a user interacts with a system to achieve a specific goal.</term>
    <term name="User Story">A simple description of a feature told from the perspective of the person who desires the new capability.</term>
    <term name="Acceptance Criteria">Conditions that a software product must satisfy to be accepted by a user, customer, or other stakeholder.</term>
    <term name="Architecture">The fundamental organization of a system embodied in its components, their relationships, and the principles guiding its design and evolution.</term>
    <term name="Code Review">A systematic examination of computer source code intended to find and fix mistakes.</term>
    <term name="Integration Testing">Testing in which individual software modules are combined and tested as a group.</term>
    <term name="System Testing">Testing conducted on a complete integrated system to evaluate its compliance with specified requirements.</term>
    <term name="Regression Testing">Testing to confirm that recent changes have not adversely affected existing features.</term>
    <term name="Version Control">A system that records changes to a file or set of files over time so that specific versions can be recalled later.</term>
    <term name="Technical Debt">The implied cost of additional rework caused by choosing an easy solution now instead of using a better approach that would take longer.</term>
</terms>